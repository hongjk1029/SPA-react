version: "3.9"
services:
  # redis:
  #   restart: always
  #   image: redis:5
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - db-net
  
  frontend:
    container_name: spa_frontend
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app/frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - db-net
  backend:
    container_name: spa_backend
    command: "python manage.py runserver 0.0.0.0:8000"
    build:
      context: ./backend/
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app/api
    ports:
      - "8000:8000"
    environment:
      MYSQL_HOST: db
      MYSQL_USER: postgres
      MYSQL_PASSWORD: postgres
      MYSQL_DB: postgres

    restart: on-failure
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    volumes:
      - spa-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    container_name: db
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  spa-data:

networks:
  db-net:
    driver: bridge
